
# Temporarily set a build number format that includes a large revision
# number that won't conflict with buildpipeline official builds.
name: $(Date:yyyyMMdd)$(Rev:.7r)

variables:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

resources:
  containers:
  - container: ubuntu_1404_arm_cross_build_image
    image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-cross-e435274-20180426002420

  - container: ubuntu_1604_arm64_cross_build_image
    image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-cross-arm64-a3ae44b-20180315221921

  - container: musl_x64_build_image
    image: mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.6-WithNode-f4d3fe3-20181220200247

  - container: musl_arm64_build_image
    image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-cross-arm64-alpine-406629a-20190403203438

  - container: centos7_x64_build_image
    image: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-d485f41-20173404063424

  - container: centos6_x64_build_image
    image: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-6-376e1a3-20174311014331

trigger:
- master

pr:
- master

jobs:

##   The following is the matrix of test runs that we have. This is
##   duplicated for each os/arch combination in platform-matrix.yml.

##
##   Product build       Test build              Test run
##   (Azure DevOps)      (Azure DevOps)          (helix)
##
##   ###########################################################################################
##
##   Debug
##
##   Checked ----------> Pri0 -----------------> plain runtests
##           |
##           \---------> Pri1 -----------------> plain runtests
##           |                \----------------> jitstress
##           |                \----------------> gcstress
##           |                \----------------> maybe more (dynamically selected runtest modes)
##           |
##           \---------> Pri1 crossgen --------> plain runtests
##                                     \-------> jitstress
##                                     \-------> gcstress
##                                     \-------> maybe more (dynamically selected runtest modes)
##
##   Release ----------> Pri1 -----------------> plain runtests
##           |
##           \---------> Pri1 crossgen --------> plain runtests
##
##

## Each build or test job is defined in Azure DevOps, and will show
## up in the UI in the order in which they are defined here. The
## build and test build job matrix is defined statically, but
## queue-time inputs can be used to control whether a job executes
## (used to select which jobs run in ci vs for official builds), or
## to select test modes. This should eventually be used to enable
## requesting specific test runs from pull requests.


##
## Templates used to define jobs:
## Please update this if the factoring changes.
##
## This file defines the set of jobs in a platform-agnostic manner,
## using the platform-matrix.yml template. This will create one job
## for each platform from the passed-in jobTemplate (either a build
## job or a test job). The build-job.yml and test-job.yml templates
## use xplat-job.yml to handle some of the common logic for
## abstracting over platforms. Finally, xplat-job.yml uses the arcade
## base.yml job template, which sets up telemetry and signing support.

## azure-pipelines.yml -> platform-matrix.yml -------> build-job.yml -------> xplat-job.yml -> base.yml
##                                            |  (passed-in jobTemplate)  |                    (arcade)
##                                            \------> test-job.yml ------/

# TODO: simplify logic surrounding official build/ci. See
# https://github.com/Microsoft/azure-pipelines-yaml/pull/46 for more information

#
# Release builds
#
- ${{ if and(eq(variables['System.TeamProject'], 'public'), eq(variables['Build.DefinitionName'], 'coreclr-ci')) }}:
  - template: eng/platform-matrix.yml
    parameters:
      jobTemplate: build-job.yml
      buildConfig: release
        platforms:
        - Linux_x64
        - Windows_NT_x64

#
# Release test builds
#

# Performance job (run benchmarks in the dotnet/performance repo against release builds)
- ${{ if and(eq(variables['System.TeamProject'], 'public'), eq(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.DefinitionName'], 'coreclr-ci')) }}:
  - template: eng/platform-matrix.yml
    parameters:
      jobTemplate: perf-job.yml
      buildConfig: release
      platforms:
      - Linux_x64
      - Windows_NT_x64

