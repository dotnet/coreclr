{
  "build": [
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Run AgentTools/Begin.sh",
      "timeoutInMinutes": 0,
      "condition": "succeededOrFailed()",
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "targetType": "inline",
        "filePath": "",
        "arguments": "",
        "script": "if (Test-Path \"$(AgentToolsPath)\\Begin.sh\") {\n   \"Begin.sh script found. Executing...\"\n   cd $(AgentToolsPath)\n   & $(AgentToolsPath)\\Begin.sh\n} else {\n   \"Begin.sh script does not exist. Moving on...\"\n}",
        "errorActionPreference": "continue",
        "failOnStderr": "false",
        "ignoreLASTEXITCODE": "true",
        "workingDirectory": ""
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Initialize tools",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(Build.SourcesDirectory)/init-tools.sh",
        "arguments": "",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Initialize Docker",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(Build.SourcesDirectory)/Tools/scripts/docker/init-docker.sh",
        "arguments": "$(DockerImageName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Clone repository",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run --rm $(DockerCommonRunArgs) git clone $(GitHubRepo) $(GitHubDirectory)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run clean.sh",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run --rm $(DockerCommonRunArgs) ./clean.sh",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Check out the specified commit",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run --rm $(DockerCommonRunArgs) git checkout $(Build.SourceVersion)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run sync.sh",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run --rm $(DockerCommonRunArgs) ./sync.sh",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": false,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run build-rootfs.sh",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "sudo",
        "arguments": "docker run --privileged --rm $(DockerCommonRunArgs) ./cross/build-rootfs.sh $(Architecture) $(CrossToolsetVersion) $(SkipUnmount)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run build.sh",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run --rm -e ROOTFS_DIR $(DockerCommonRunArgs) ./build.sh $(PB_BuildType) $(Architecture) skipnuget cross -skiprestore stripSymbols -OfficialBuildId=$(OfficialBuildId) -- /flp:\"v=diag\"",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run build-packages.sh",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run --rm $(DockerCommonRunArgs) ./build-packages.sh -BuildType=$(PB_BuildType) -BuildArch=$(Architecture) -- /p:OfficialBuildId=$(OfficialBuildId)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": false,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Cleanup RootFS",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run --rm --privileged $(DockerCommonRunArgs) git clean -xdf $(GitHubDirectory)/cross/",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run publish-packages.sh",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run --rm $(DockerCommonRunArgs) ./publish-packages.sh -AzureAccount=$(CloudDropAccountName) -AzureToken=$(CloudDropAccessToken) -BuildType=$(PB_BuildType)  -BuildArch=$(Architecture) -Container=$(Label) -distroRid=$(Rid) -- /p:OverwriteOnPublish=true",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Create Copy Container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run $(DockerCommonRunArgs) echo",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Expose Docker repo for publishing",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "cp $(DockerContainerName):$(GitHubDirectory) $(DockerCopyDest)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Copy Publish Artifact: BuildLogs",
      "timeoutInMinutes": 0,
      "task": {
        "id": "1d341bb0-2106-458c-8422-d00bcea6512a",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "CopyRoot": "$(DockerCopyDest)",
        "Contents": "**/*.log",
        "ArtifactName": "BuildLogs",
        "ArtifactType": "Container",
        "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Cleanup Docker",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(Build.SourcesDirectory)/Tools/scripts/docker/cleanup-docker.sh",
        "arguments": "",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Run AgentTools/End.sh",
      "timeoutInMinutes": 0,
      "condition": "succeededOrFailed()",
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "targetType": "inline",
        "filePath": "",
        "arguments": "",
        "script": "if (Test-Path \"$(AgentToolsPath)\\End.sh\") {\n   \"End.sh script found. Executing...\"\n   cd $(AgentToolsPath)\n   & $(AgentToolsPath)\\End.sh\n} else {\n   \"End.sh script does not exist. Moving on...\"\n}",
        "errorActionPreference": "continue",
        "failOnStderr": "false",
        "ignoreLASTEXITCODE": "true",
        "workingDirectory": ""
      }
    }
  ],
  "options": [
    {
      "enabled": false,
      "definition": {
        "id": "5bc3cfb7-6b54-4a4b-b5d2-a3905949f8a6"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "7c555368-ca64-4199-add6-9ebaf0b0137d"
      },
      "inputs": {
        "multipliers": "[]",
        "parallel": "false",
        "continueOnError": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "234347",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "57578776-4c22-4526-aeb0-86b6da17ee9c"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    }
  ],
  "variables": {
    "system.debug": {
      "value": "false",
      "allowOverride": true
    },
    "Platform": {
      "value": "x64"
    },
    "PB_BuildType": {
      "value": "Release"
    },
    "GitHubRepo": {
      "value": "http://github.com/dotnet/coreclr.git"
    },
    "GitHubDirectory": {
      "value": "/root/coreclr"
    },
    "DockerContainerName": {
      "value": "coreclr-cross-$(Build.BuildId)"
    },
    "DockerImageName": {
      "value": "$(DockerRepository):$(DockerTag)"
    },
    "DockerRepository": {
      "value": "microsoft/dotnet-buildtools-prereqs"
    },
    "DockerTag": {
      "value": "ubuntu1404_cross_prereqs_v1",
      "allowOverride": true
    },
    "CloudDropAccountName": {
      "value": "dotnetbuildoutput"
    },
    "CloudDropAccessToken": {
      "value": null,
      "isSecret": true
    },
    "OfficialBuildId": {
      "value": "$(Build.BuildNumber)",
      "allowOverride": true
    },
    "Label": {
      "value": "$(Build.BuildNumber)"
    },
    "GitHubBranch": {
      "value": "sni_plus_latestbuildtools"
    },
    "Priority": {
      "value": "0"
    },
    "RepoAccessToken": {
      "value": null,
      "isSecret": true
    },
    "Architecture": {
      "value": "arm"
    },
    "CommitToCheckout": {
      "value": "HEAD",
      "allowOverride": true
    },
    "DockerCopyDest": {
      "value": "$(Build.BinariesDirectory)/docker_repo"
    },
    "ROOTFS_DIR": {
      "value": "/crossrootfs/$(Architecture)"
    },
    "DockerVolumeName": {
      "value": "coreclr-cross-$(Build.BuildId)"
    },
    "DockerCommonRunArgs": {
      "value": "--name $(DockerContainerName) -v \"$(DockerVolumeName):$(GitHubDirectory)\" -w=\"$(GitHubDirectory)\" $(DockerImageName)"
    },
    "PB_CleanAgent": {
      "value": "true"
    }
  },
  "demands": [
    "Agent.OS -equals linux"
  ],
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [],
      "artifactTypesToDelete": [
        "FilePath",
        "SymbolStore"
      ],
      "daysToKeep": 10,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "buildNumberFormat": "$(date:yyyyMMdd)$(rev:-rr)-$(DockerTag)",
  "jobAuthorizationScope": "projectCollection",
  "jobTimeoutInMinutes": 90,
  "repository": {
    "properties": {
      "labelSources": "0",
      "reportBuildStatus": "true",
      "fetchDepth": "0",
      "gitLfsSupport": "false",
      "skipSyncSource": "false",
      "cleanOptions": "0"
    },
    "id": "670e3783-ab4f-44fc-9786-d332007da311",
    "type": "TfsGit",
    "name": "DotNet-CoreCLR-Trusted",
    "url": "https://devdiv.visualstudio.com/DevDiv/_git/DotNet-CoreCLR-Trusted",
    "defaultBranch": "refs/heads/master",
    "clean": "true",
    "checkoutSubmodules": false
  },
  "processParameters": {},
  "quality": "definition",
  "queue": {
    "pool": {
      "id": 39,
      "name": "DotNet-Build"
    },
    "id": 36,
    "name": "DotNet-Build"
  },
  "path": "\\",
  "type": "build",
  "id": 5019,
  "name": "DotNet-CoreClr-Trusted-Linux-Crossbuild",
  "url": "https://devdiv.visualstudio.com/DefaultCollection/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_apis/build/Definitions/5019",
  "project": {
    "id": "0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "name": "DevDiv",
    "description": "Visual Studio and DevDiv team project for git source code repositories.  Work items will be added for Adams, Dev14 work items are tracked in vstfdevdiv.  ",
    "url": "https://devdiv.visualstudio.com/DefaultCollection/_apis/projects/0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "state": "wellFormed",
    "revision": 418097633
  }
}
