parameters:
  jobTemplate: ''
  buildConfig: ''
  platforms: []
  # platformGroup is a named collection of platforms. Allowed values:
  # 'all' - all platforms
  # 'gcstress' - platforms that support running under GCStress0x3 and GCStress0xC scenarios
  platformGroup: ''
  # helixQueueGroup is a named collection of Helix Queues. If specified, it determines which Helix queues are
  # used, instead of the usual criteria. Allowed values:
  # 'pr' - the queues used for a pull request for the platform. Typically a small set.
  # 'ci' - the queues used for a CI (post-merge) test run.
  # 'all' - the queues used for non-PR, non-CI test runs, e.g., Manual or Scheduled runs. Typically this is all available queues.
  helixQueueGroup: 'pr'
  jobParameters: {}

jobs:

# TODO: simplify osIdentifier by adding osGroup and osSubGroup. See
# https://github.com/Microsoft/azure-pipelines-yaml/pull/46 for more information


# Linux x64

- ${{ if or(containsValue(parameters.platforms, 'Linux_x64'), in(parameters.platformGroup, 'all', 'gcstress')) }}:
  - template: ${{ parameters.jobTemplate }}
    parameters:
      buildConfig: ${{ parameters.buildConfig }}
      archType: x64
      osGroup: Linux
      osIdentifier: Linux
      containerName: centos7_x64_build_image
      helixQueues:
      - ${{ if and(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest', 'IndividualCI', 'BatchedCI')) }}:
        - ${{ if not(contains(parameters.jobTemplate, 'perf')) }}:
          - Ubuntu.1804.Amd64.Open
        - ${{ if contains(parameters.jobTemplate, 'perf') }}:
          - Ubuntu.1604.Amd64.Open
      - ${{ if and(eq(variables['System.TeamProject'], 'public'), notIn(variables['Build.Reason'], 'PullRequest', 'IndividualCI', 'BatchedCI')) }}:
        - Debian.9.Amd64.Open
        - Ubuntu.1604.Amd64.Open
        - Ubuntu.1804.Amd64.Open
        - Centos.7.Amd64.Open
        - RedHat.7.Amd64.Open
      - ${{ if eq(variables['System.TeamProject'], 'internal') }}:
        - Debian.9.Amd64
        - Ubuntu.1604.Amd64
        - Ubuntu.1804.Amd64
        - Centos.7.Amd64
        - (Fedora.28.Amd64)Ubuntu.1604.amd64@mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-28-helix-45b1fa2-20190327215722
        - RedHat.7.Amd64
      ${{ insert }}: ${{ parameters.jobParameters }}

# Windows x64

- ${{ if or(containsValue(parameters.platforms, 'Windows_NT_x64'), in(parameters.platformGroup, 'all', 'gcstress')) }}:
  - template: ${{ parameters.jobTemplate }}
    parameters:
      buildConfig: ${{ parameters.buildConfig }}
      archType: x64
      osGroup: Windows_NT
      osIdentifier: Windows_NT
      helixQueues:
      - ${{ if and(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest', 'IndividualCI', 'BatchedCI')) }}:
        - ${{ if not(contains(parameters.jobTemplate, 'perf')) }}:
          - Windows.10.Amd64.Open
        - ${{ if contains(parameters.jobTemplate, 'perf') }}:
          - Windows.10.Amd64.ClientRS4.DevEx.15.8.Open
      - ${{ if and(eq(variables['System.TeamProject'], 'public'), notIn(variables['Build.Reason'], 'PullRequest', 'IndividualCI', 'BatchedCI')) }}:
        # TODO: add Windows.10.Nano.Amd64.Open once https://github.com/dotnet/coreclr/issues/21693 has been resolved
        - Windows.7.Amd64.Open
        - Windows.81.Amd64.Open
        - Windows.10.Amd64.Open
      - ${{ if eq(variables['System.TeamProject'], 'internal') }}:
        - Windows.7.Amd64
        - Windows.81.Amd64
        - Windows.10.Amd64
        - Windows.10.Amd64.Core
        - Windows.10.Nano.Amd64
      ${{ insert }}: ${{ parameters.jobParameters }}
