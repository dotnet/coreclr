parameters:
  jobTemplate: ''
  buildConfig: ''
  platforms: []
  # platformGroup is a named collection of platforms. Allowed values:
  # 'all' - all platforms
  # 'gcstress' - platforms that support running under GCStress0x3 and GCStress0xC scenarios
  platformGroup: ''
  # helixQueueGroup is a named collection of Helix Queues. If specified, it determines which Helix queues are
  # used, instead of the usual criteria. Allowed values:
  # 'pr' - the queues used for a pull request for the platform. Typically a small set.
  # 'ci' - the queues used for a CI (post-merge) test run.
  # 'all' - the queues used for non-PR, non-CI test runs, e.g., Manual or Scheduled runs. Typically this is all available queues.
  # 'corefx' - the queues used for a corefx test run.
  helixQueueGroup: 'pr'
  ignoreDependencyOnBuildJobs: false
  jobParameters: {}

jobs:
- template: /eng/platform-matrix-inner.yml
  parameters:
    jobTemplate: ${{ parameters.jobTemplate }}
    buildConfig: ${{ parameters.buildConfig }}
    platforms: ${{ parameters.platforms }}
    platformGroup: ${{ parameters.platformGroup }}
    helixQueueGroup: ${{ parameters.helixQueueGroup }}
    ignoreDependencyOnBuildJobs: ${{ parameters.ignoreDependencyOnBuildJobs }}
    jobParameters: ${{ parameters.jobParameters }}
    combos:
      ${{ if or(containsValue(parameters.platforms, 'Linux_arm'), in(parameters.platformGroup, 'all', 'gcstress')) }}:
        linuxArm: true
        osGroupArm: Linux
        osIdentifierArm: Linux

      ${{ if or(containsValue(parameters.platforms, 'Linux_arm64'), in(parameters.platformGroup, 'all', 'gcstress')) }}:
        linuxArm64: true
        osGroupArm64: Linux
        osIdentifierArm64: Linux

      ${{ if or(containsValue(parameters.platforms, 'Linux_musl_x64'), eq(parameters.platformGroup, 'all')) }}:
        linuxMuslX64: true
        ${{ if and(not(or(containsValue(parameters.platforms, 'OSX_x64'), eq(parameters.platformGroup, 'all'))), not(or(containsValue(parameters.platforms, 'Linux_x64'), in(parameters.platformGroup, 'all', 'gcstress')))) }}:
          osGroupX64: Linux
          osIdentifierX64: Linux_musl

      ${{ if or(containsValue(parameters.platforms, 'Linux_musl_arm64'), eq(parameters.platformGroup, 'all')) }}:
        linuxMuslArm64: true
        ${{ if not(or(containsValue(parameters.platforms, 'Linux_arm64'), in(parameters.platformGroup, 'all', 'gcstress'))) }}:
          osGroupArm64: Linux
          osIdentifierArm64: Linux_musl

      ${{ if or(containsValue(parameters.platforms, 'Linux_rhel6_x64'), eq(parameters.platformGroup, 'all')) }}:
        linuxRhel6X64: true
        ${{ if and(not(or(containsValue(parameters.platforms, 'OSX_x64'), eq(parameters.platformGroup, 'all'))), not(or(containsValue(parameters.platforms, 'Linux_x64'), in(parameters.platformGroup, 'all', 'gcstress'))), not(or(containsValue(parameters.platforms, 'Linux_musl_x64'), eq(parameters.platformGroup, 'all')))) }}:
          osGroupX64: Linux
          osIdentifierX64: Linux_rhel6

      ${{ if or(containsValue(parameters.platforms, 'Linux_x64'), in(parameters.platformGroup, 'all', 'gcstress')) }}:
        linuxX64: true
        ${{ if not(or(containsValue(parameters.platforms, 'OSX_x64'), eq(parameters.platformGroup, 'all'))) }}:
          osGroupX64: Linux
          osIdentifierX64: Linux

      ${{ if or(containsValue(parameters.platforms, 'OSX_x64'), eq(parameters.platformGroup, 'all')) }}:
        osxX64: true
        osGroupX64: OSX
        osIdentifierX64: OSX
    
      ${{ if or(containsValue(parameters.platforms, 'Windows_NT_x64'), in(parameters.platformGroup, 'all', 'gcstress')) }}:
        windowsX64: true

      ${{ if or(containsValue(parameters.platforms, 'Windows_NT_x86'), in(parameters.platformGroup, 'all', 'gcstress')) }}:
        windowsX86: true

      ${{ if or(containsValue(parameters.platforms, 'Windows_NT_arm'), eq(parameters.platformGroup, 'all')) }}:
        windowsArm: true

      ${{ if or(containsValue(parameters.platforms, 'Windows_NT_arm64'), eq(parameters.platformGroup, 'all')) }}:
        windowsArm64: true
