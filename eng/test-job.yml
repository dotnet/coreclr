parameters:
  buildConfig: ''
  archType: ''
  osGroup: ''
  osSubgroup: ''
  managedTestBuildOsGroup: ''
  managedTestBuildOsSubgroup: ''
  container: ''
  testGroup: ''
  jitPlatforms: ''
  r2rPlatforms: ''
  helixQueues: ''
  crossrootfsDir: ''
  # If true, run the corefx tests instead of the coreclr ones
  corefxTests: false
  displayNameArgs: ''
  runInUnloadableContext: false
  condition: true
  stagedBuild: false

### Test job

### Each test job depends on a corresponding build job with the same
### buildConfig and archType.

jobs:
- ${{ if and(ne(parameters.corefxTests, true), eq(parameters.osSubgroup, parameters.managedTestBuildOsSubgroup), eq(parameters.osGroup, parameters.managedTestBuildOsGroup)) }}:
  - template: build-test-job.yml
    parameters:
      buildConfig: ${{ parameters.buildConfig }}
      archType: ${{ parameters.archType }}
      osGroup: ${{ parameters.managedTestBuildOsGroup }}
      osSubgroup: ${{ parameters.managedTestBuildOsSubgroup }}
      container: ${{ parameters.container }}
      testGroup: ${{ parameters.testGroup }}
      displayNameArgs: ${{ parameters.displayNameArgs }}
      condition: ${{ parameters.condition }}
      stagedBuild: ${{ parameters.stagedBuild }}

      ${{ if eq(parameters.testGroup, 'innerloop') }}:
        priBuildNamePart: 'p0_'
        priDisplayNamePart: 'Pri0 '
      ${{ if ne(parameters.testGroup, 'innerloop') }}:
        priBuildNamePart: 'p1_'
        priDisplayNamePart: 'Pri1 '

- ${{ if or(eq(parameters.r2rPlatforms, ''), containsValue(parameters.jitPlatforms, 'all'), containsValue(parameters.jitPlatforms, format('{0}{1}_{2}', parameters.osGroup, parameters.osSubgroup, parameters.archType))) }}:
  - template: run-test-job.yml
    parameters:
      buildConfig: ${{ parameters.buildConfig }}
      archType: ${{ parameters.archType }}
      osGroup: ${{ parameters.osGroup }}
      osSubgroup: ${{ parameters.osSubgroup }}
      managedTestBuildOsGroup: ${{ parameters.managedTestBuildOsGroup }}
      managedTestBuildOsSubgroup: ${{ parameters.managedTestBuildOsSubgroup }}
      container: ${{ parameters.container }}
      testGroup: ${{ parameters.testGroup }}
      readyToRun: false
      readyToRunNamePart: ''
      readyToRunDisplayNamePart: ''
      helixQueues: ${{ parameters.helixQueues }}
      corefxTests: ${{ parameters.coreFxTests }}
      displayNameArgs: ${{ parameters.displayNameArgs }}
      stagedBuild: ${{ parameters.stagedBuild }}
      runInUnloadableContext: ${{ parameters.runInUnloadableContext }}

      ${{ if eq(parameters.testGroup, 'innerloop') }}:
        priBuildNamePart: 'p0_'
        priDisplayNamePart: 'Pri0 '
      ${{ if ne(parameters.testGroup, 'innerloop') }}:
        priBuildNamePart: 'p1_'
        priDisplayNamePart: 'Pri1 '

- ${{ if and(ne(parameters.r2rPlatforms, ''), or(containsValue(parameters.r2rPlatforms, 'all'), containsValue(parameters.r2rPlatforms, format('{0}{1}_{2}', parameters.osGroup, parameters.osSubgroup, parameters.archType)))) }}:
  - template: run-test-job.yml
    parameters:
      buildConfig: ${{ parameters.buildConfig }}
      archType: ${{ parameters.archType }}
      osGroup: ${{ parameters.osGroup }}
      osSubgroup: ${{ parameters.osSubgroup }}
      managedTestBuildOsGroup: ${{ parameters.managedTestBuildOsGroup }}
      managedTestBuildOsSubgroup: ${{ parameters.managedTestBuildOsSubgroup }}
      container: ${{ parameters.container }}
      testGroup: ${{ parameters.testGroup }}
      readyToRun: true
      readyToRunNamePart: 'r2r_'
      readyToRunDisplayNamePart: 'R2R '
      helixQueues: ${{ parameters.helixQueues }}
      corefxTests: ${{ parameters.coreFxTests }}
      displayNameArgs: ${{ parameters.displayNameArgs }}
      stagedBuild: ${{ parameters.stagedBuild }}
      runInUnloadableContext: ${{ parameters.runInUnloadableContext }}

      ${{ if eq(parameters.testGroup, 'innerloop') }}:
        priBuildNamePart: 'p0_'
        priDisplayNamePart: 'Pri0 '
      ${{ if ne(parameters.testGroup, 'innerloop') }}:
        priBuildNamePart: 'p1_'
        priDisplayNamePart: 'Pri1 '
