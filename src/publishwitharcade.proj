<Project DefaultTargets="PublishPackages">

  <!-- TODO: move properties imported from here into a common props file -->
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />

  <!-- Use an explicit SDK import so that arcade uses the build
       configuration computed in dir.common.props. -->
  <Import Project="Sdk.props" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <Import Project="$(NuGetPackageRoot)microsoft.dotnet.build.tasks.feed\$(MicrosoftDotNetBuildTasksFeedVersion)\build\Microsoft.DotNet.Build.Tasks.Feed.targets" />

  <PropertyGroup>
    <!-- Set the TargetFramework just to make the SDK happy -->
    <TargetFramework>net462</TargetFramework>
  </PropertyGroup>

  <Target Name="PublishPackages">

    <Message Importance="High" Text="PackagesBinDir: $(PackagesBinDir)" />

    <ItemGroup>
      <PackagesToPublish Include="$(PackagesBinDir)pkg\*.nupkg" IsShipping="true" />
    </ItemGroup>

    <!-- Managed-only packages are built on each windows leg, but we
         only want to upload them once. Let's arbitrarily upload these
         only from the x64 leg. -->
    <ItemGroup Condition=" '$(BuildArch)' != 'x64' ">
      <PackagesToPublish Remove="$(PackagesBinDir)pkg\Microsoft.NET.Sdk.IL*.nupkg" />
      <PackagesToPublish Remove="$(PackagesBinDir)pkg\Microsoft.TargetingPack.Private.CoreCLR*.nupkg" />
    </ItemGroup>

    <!-- TODO: Investigate whether we can get rid of the transport
         packages entirely. For now, just exclude them from
         publishing. -->
    <ItemGroup>
      <PackagesToPublish Remove="$(PackagesBinDir)pkg\transport*.nupkg" />
    </ItemGroup>

    <Message Importance="High" Text="PackagesToPublish: @(PackagesToPublish)" />
    <Message Importance="High" Text="PackagesToPublish metadata: @(PackagesToPublish->'%(IsShipping)')" />
    <Message Importance="High" Text="nugetroot: @(NuGetPackageRoot)" />

    <ItemGroup>
      <ItemsToPushToBlobFeed Include="@(PackagesToPublish)">
        <ManifestArtifactData Condition="!%(IsShipping)">NonShipping=true</ManifestArtifactData> <!-- TODO: how is this metadata used? -->
      </ItemsToPushToBlobFeed>
    </ItemGroup>

    <Error Condition=" '$(AzureFeedUrl)' == '' " Text="AzureFeedUrl must be set" />
    <Error Condition=" '$(AzureAccountKey)' == '' " Text="AzureAccountKey must be set" />
    <Error Condition=" '$(BUILD_REPOSITORY_URI)' == '' " Text="BUILD_REPOSITORY_URI must be set" />
    <Error Condition=" '$(BUILD_SOURCEBRANCH)' == '' " Text="BUILD_SOURCEBRANCH must be set" />
    <Error Condition=" '$(BUILD_BUILDNUMBER)' == '' " Text="BUILD_BUILDNUMBER must be set" />
    <Error Condition=" '$(BUILD_SOURCEVERSION)' == '' " Text="BUILD_SOURCEVERSION must be set" />


    <PropertyGroup>
      <AssetManifestFilePath>$(ArtifactsLogDir)AssetManifest\$(BuildOS)-$(BuildArch)</AssetManifestFilePath>
    </PropertyGroup>
    <PushToBlobFeed ExpectedFeedUrl="$(AzureFeedUrl)"
                    AccountKey="$(AzureAccountKey)"
                    ItemsToPush="@(ItemsToPushToBlobFeed)"
                    ManifestBuildData="Location=$(AzureFeedUrl)"
                    ManifestRepoUri="$(BUILD_REPOSITORY_URI)"
                    ManifestBranch="$(BUILD_SOURCEBRANCH)"
                    ManifestBuildId="$(BUILD_BUILDNUMBER)"
                    ManifestCommit="$(BUILD_SOURCEVERSION)"
                    AssetManifestPath="$(AssetManifestFilePath)" />
  </Target>

</Project>
